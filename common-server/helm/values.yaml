# Copyright 2025 Deutsche Telekom IT GmbH
#
# SPDX-License-Identifier: Apache-2.0

replicaCount: 1

image:
  repository: ghcr.io/telekom/controlplane/common-server
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: stable

imagePullSecrets: []

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 2000

securityContext:
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: true
  annotations:
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
  hosts:
    - host: controlplane-api.your-domain.com # Replace with your actual domain
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls:
    - hosts:
        - controlplane-api.your-domain.com # Must match the host above

metrics:
  enabled: true

secretmanager:
  enabled: false
  trustmanager:
    enabled: true

resources:
  # Adjust as needed for your workload.
  limits:
    cpu: 500m
    memory: 256Mi
  requests:
    cpu: 100m
    memory: 64Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}
tolerations: []
affinity: {}

logLevel: "info"

config: 
  address: ":8080"
  basepath: "/api"
  resources: [] # Define which Kubernetes CRDs this API should expose
    # Example - uncomment and modify as needed:
    # - group: approval.cp.ei.telekom.de
    #   version: v1
    #   resource: approvals

  openapi:
    title: "Control Plane API"
    description: "API for managing control plane resources"
    version: "v1"
    servers:
      - url: "https://controlplane-api.your-domain.com" # Replace with your actual API URL
        description: "Development"

  predefined: [] # Define predefined resource queries and transformations

    # - ref: approvals # This references the previously defined resource
    #   name: grants
    #   filters:
    #     - path: spec.state
    #       op: ==
    #       value: Pending
    #     - path: spec.requester.properties.basePath
    #       op: ==
    #       value: $<basePath>
    #   patches:
    #     - path: spec.decider.name
    #       op: replace
    #       value: $<deciderName>
    #     - path: spec.state
    #       op: replace
    #       value: Granted

rbac:
  rules:
    - apiGroups: ["apiextensions.k8s.io"]
      resources: ["customresourcedefinitions"]
      verbs: ["list"]
    - apiGroups: ["*"] # Grant access to all API groups - restrict in production
      resources: ["*"]
      verbs: ["*"]